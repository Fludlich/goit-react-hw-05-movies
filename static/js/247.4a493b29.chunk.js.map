{"version":3,"file":"static/js/247.4a493b29.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,kCAEEC,EAAgB,mCAAG,sGACPH,EAASI,IAAT,gCAAsCL,EAAtC,2BADO,uBACrBM,EADqB,EACrBA,KADqB,kBAErBA,GAFqB,2CAAH,qDAKhBC,EAAc,mCAAG,WAAOC,GAAP,yFACHP,EAASI,IAAT,+BAAqCL,EAArC,iCAAqEQ,IADlE,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKdG,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAASI,IAAT,gBAAsBK,EAAtB,oBAAyCV,IADtC,uBAClBM,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAO,mCAAG,WAAMD,GAAN,yFACET,EAASI,IAAT,gBAAsBK,EAAtB,4BAAiDV,IADnD,uBACbM,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPM,EAAU,mCAAG,WAAOF,GAAP,yFACDT,EAASI,IAAT,gBAAsBK,EAAtB,4BAAiDV,IADhD,uBAChBM,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD,iHCtBhB,SAASO,IACd,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OANAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAQD,GACLS,MAAK,SAAAC,GAAQ,OAAIH,EAAQG,EAASJ,KAArB,IACbK,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACZ,KAGF,wBACGM,EAAKS,OAAS,GACbT,EAAKU,KAAI,YAA2D,IAAzDC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,aAAaC,EAAkC,EAAlCA,cAAcC,EAAoB,EAApBA,KAAKC,EAAe,EAAfA,UAClD,OACE,2BACE,gBACEC,IAAG,yCAAoCJ,GACvCK,IAAG,UAAKJ,GACRK,MAAM,SAER,wBAAKJ,KACL,uCAAeC,OAPRJ,EAUZ,KAGR,C","sources":["Services/services.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'cc9feb50eaf7ec71b368044a87f5f06b';\nconst fetchApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/'});\n\nexport const getPopularMovies = async()=>{\n    const {data} = await fetchApi.get(`movie/popular?api_key=${API_KEY}&language=en-US&page=1` )\n    return data\n};\n\nexport const getMovieByName = async (query) => {\n    const { data } = await fetchApi.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}`);\n    return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await fetchApi.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await fetchApi.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getReviews = async (movieId) => {\n  const { data } = await fetchApi.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data;\n};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCast } from 'Services/services';\n\nexport function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(response => setCast(response.cast))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.length > 0 &&\n        cast.map(({cast_id, profile_path,original_name,name,character}) => {\n          return (\n            <li key={cast_id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={`${original_name}`}\n                width=\"300\"\n              />\n              <h2>{name}</h2>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n"],"names":["API_KEY","fetchApi","axios","baseURL","getPopularMovies","get","data","getMovieByName","query","getMovieById","movieId","getCast","getReviews","Cast","useParams","useState","cast","setCast","useEffect","then","response","catch","error","console","log","length","map","cast_id","profile_path","original_name","name","character","src","alt","width"],"sourceRoot":""}